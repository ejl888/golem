<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>nl.finalist.golem</groupId>
		<artifactId>golem-parent</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>golem-vocabularies-admin</artifactId>
	<packaging>war</packaging>
	<name>Golum - Vocabularies administration</name>
	<description>Administer the vocabulary store</description>
	<dependencies>

		<dependency>
			<groupId>org.neo4j.app</groupId>
			<artifactId>neo4j-server</artifactId>
			<version>1.8.1</version>
			<exclusions>
				<exclusion>
					<artifactId>slf4j-jdk14</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
				<exclusion>
					<artifactId>servlet-api</artifactId>
					<groupId>org.mortbay.jetty</groupId>
				</exclusion>
				<exclusion>
					<artifactId>logback-access</artifactId>
					<groupId>ch.qos.logback</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.neo4j.app</groupId>
			<artifactId>neo4j-server</artifactId>
			<version>1.8.1</version>
			<classifier>static-web</classifier>
<!-- 			<scope>provided</scope> -->
			<exclusions>
				<exclusion>
					<artifactId>slf4j-jdk14</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.3.1.Final</version>
		</dependency>

		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.2.2</version>
		</dependency>


		<dependency>
			<groupId>nl.finalist.golem</groupId>
			<artifactId>golem-vocabularies</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-neo4j-rest</artifactId>
			<version>2.2.0.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-jdk14</artifactId>
			<version>1.7.3</version>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.3.2</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!--
                For some reason tomcat doesn't like it when the neo4j-server static-web jar is included in the WAR file
                It throws exceptions like:
                    SEVERE: /webadmin/css/style.css
                        java.lang.IllegalStateException: zip file closed

                If we instead extract the contents into the WAR, it is much happier.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.4</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <phase>process-resources</phase>
                    </execution>
                </executions>
                <configuration>
                    <includeGroupIds>org.neo4j.app</includeGroupIds>
                    <includeArtifactIds>neo4j-server</includeArtifactIds>
                    <includeClassifiers>static-web</includeClassifiers>
                    <includes>webadmin-html/**</includes>
                    <outputDirectory>target/${artifactId}-${version}/WEB-INF/classes</outputDirectory>
                </configuration>
            </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<warName>golem</warName>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>